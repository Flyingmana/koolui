buildscript {

    repositories {
        maven { url "http://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
        mavenCentral()

    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.kotlinVersion}"
    }
}

group 'com.lightningkite.kotlin.crossplatform'
version '0.0.2'

apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'kotlin-platform-js'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-js:${rootProject.kotlinVersion}"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:${rootProject.coroutinesVersion}"
    expectedBy project(':test-common')
    compile "com.lightningkite:kommunicate-mirror-js:0.0.2"
    compile "com.lightningkite:mirror-runtime-js:0.0.2"
//  compileestCompile "org.jetbrains.kotlin:kotlin-test-js:${rootProject.kotlinVersion}"
//  compileestCompile "org.jetbrains.kotlin:kotlin-test:${rootProject.kotlinVersion}"

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.0.1"

    compile "com.lightningkite:kommon-js:${project.version}"
    compile "com.lightningkite:kommunicate-js:${project.version}"
    compile "com.lightningkite:lokalize-js:${project.version}"
    compile "com.lightningkite:reacktive-js:${project.version}"
    compile "com.lightningkite:recktangle-js:${project.version}"
    compile "com.lightningkite:koolui-js:${project.version}"
}


def outputDir = "${projectDir}/web"

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
    kotlinOptions.suppressWarnings = true
    kotlinOptions.verbose = true
    kotlinOptions.main = "call"
    kotlinOptions.moduleKind = "umd"
}

compileTestKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js-tests/${project.name}-tests.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'umd'
    kotlinOptions.main = "call"
}



kotlinFrontend {
    downloadNodeJsVersion = "latest"


    npm {
        devDependency("karma")
    }

    webpackBundle {
        bundleName = "main"
        sourceMapEnabled = true  // enable/disable source maps
        contentPath = file('src/main/web') // a file that represents a directory to be served by dev server)
        publicPath = "/"  // web prefix
        port = 8088   // dev server port
        proxyUrl = "" // URL to be proxied, useful to proxy backend webserver
        stats = "errors-only"  // log level
    }

    karma {
        port = 9876
        runnerPort = 9100
        reporters = ["progress"]
        frameworks = ["qunit"] // for now only qunit works as intended
    }
}

clean.doFirst() {
    delete "$outputDir"
}