buildscript {
    ext.repositoryName = project.name
    ext.versionsProperties = new Properties()
    file("versions.properties").withInputStream { versionsProperties.load(it) }

    repositories {
        maven { url "http://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
        mavenCentral()

    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versionsProperties.getProperty("kotlin")}"
    }
}

group 'com.lightningkite.kotlin.crossplatform'
version '0.0.2'

apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'kotlin2js'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url 'https://dl.bintray.com/lightningkite/com.lightningkite.krosslin' }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-js:${versionsProperties.getProperty("kotlin")}"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:${versionsProperties.getProperty("kotlinx_coroutines")}"
//  testCompile "org.jetbrains.kotlin:kotlin-test-js:${versionsProperties.getProperty("kotlin")}"
//  testCompile "org.jetbrains.kotlin:kotlin-test:${versionsProperties.getProperty("kotlin")}"

//    api "com.lightningkite:kommon-js:${versionsProperties.kommon}"
//    api "com.lightningkite:lokalize-js:${versionsProperties.lokalize}"
//    api "com.lightningkite:reacktive-js:${versionsProperties.reacktive}"
//    api "com.lightningkite:recktangle-js:${versionsProperties.recktangle}"
//    api "com.lightningkite:mirror-runtime-js:${versionsProperties.mirror}"
//    api "com.lightningkite:koolui-js:${versionsProperties.koolui}"
    api project(":koolui-test-common")
}


def outputDir = "${projectDir}/web"

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
    kotlinOptions.suppressWarnings = true
    kotlinOptions.verbose = true
    kotlinOptions.main = "call"
    kotlinOptions.moduleKind = "umd"
}

compileTestKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js-tests/${project.name}-tests.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'umd'
    kotlinOptions.main = "call"
}



kotlinFrontend {
    downloadNodeJsVersion = "latest"


    npm {
        devDependency("karma")
    }

    webpackBundle {
        bundleName = "main"
        sourceMapEnabled = true  // enable/disable source maps
        contentPath = file('src/main/web') // a file that represents a directory to be served by dev server)
        publicPath = "/"  // web prefix
        port = 8088   // dev server port
        proxyUrl = "" // URL to be proxied, useful to proxy backend webserver
        stats = "errors-only"  // log level
    }

    karma {
        port = 9876
        runnerPort = 9100
        reporters = ["progress"]
        frameworks = ["qunit"] // for now only qunit works as intended
    }
}

clean.doFirst() {
    delete "$outputDir"
}
